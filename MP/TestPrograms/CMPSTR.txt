.MODEL SMALL

DISPLAY MACRO MSG
LEA DX, MSG
MOV AH, 09H
INT 21H
ENDM

.DATA
    MSG1 DB 0DH, 0AH, "ENTER STRING1:$"
    MSG2 DB 0DH, 0AH, "ENTER STRING2:$"
    MSG3 DB 0DH, 0AH, "STRING1 LENGTH:$"
    MSG4 DB 0DH, 0AH, "STRING2 LENGTH:$"
    MSG5 DB 0DH, 0AH, "STRINGS EQUAL!$"
    MSG6 DB 0DH, 0AH, "STRINGS UNEQUAL!$"

    STR1 DB 80H DUP(?)
    STR2 DB 80H DUP(?)

    LEN1 DB 00
    LEN2 DB 00
.CODE
    MOV AX, @DATA
    MOV DS, AX

    DISPLAY MSG1
    MOV SI, OFFSET STR1
    CALL READSTR
    MOV LEN1, CL
    
    DISPLAY MSG2
    MOV SI, OFFSET STR2 
    CALL READSTR 
    MOV LEN2, CL

    DISPLAY MSG3    ; PRINT LEN OF STR1
    MOV AL, LEN1
    CALL LENDIS

    DISPLAY MSG4    ; PRINT LEN OF STR2
    MOV AL, LEN2
    CALL LENDIS

    MOV SI, OFFSET STR1
    MOV DI, OFFSET STR2
    CLD

    MOV CL, LEN1
L1: MOV AL, [SI]
    CMP AL, [DI]
    JNE FAIL
    INC SI
    INC DI
    DEC CL
    CMP CL, 00
    JNZ L1
    JMP SUCCESS

SUCCESS:
    DISPLAY MSG5
    JMP FINAL

FAIL:
    DISPLAY MSG6
    JMP FINAL

LENDIS PROC NEAR
    MOV DL, AL
    ADD DL, 30H
    MOV AH, 02H
    INT 21H
    ; XOR AH, AH
    ; ADD AL, 00
    ; AAM
    ; ADD AX, 3030H   ; NOW WE HAVE LEN IN DECIMAL
    ; MOV DL, AH      ; PRINT HIGHER DIGIT
    ; MOV AH, 02H
    ; INT 21H
    ; MOV DL, AL      ; PRINT LOWER DIGIT
    ; MOV AH, 02H
    ; INT 21H
RET
LENDIS ENDP


READSTR PROC NEAR ;CL WILL STORE LEN OF STR
    XOR CL, CL
AG: MOV AH, 01H
    INT 21H
    CMP AL, 0DH
    JZ DONE
    MOV [SI], AL
    INC SI
    INC CL
    JMP AG
DONE:
    MOV [SI], BYTE PTR '$'
RET
READSTR ENDP

FINAL:
    MOV AH, 4CH
    INT 21H
END
